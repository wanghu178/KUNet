22-04-26 21:39:24.439 - INFO:   name: hdrtv_final
  model: condition
  use_tb_logger: True
  distortion: sr
  scale: 1
  gpu_ids: [0]
  datasets:[
    train:[
      name: Single_LDR2HDR
      mode: hdrtv
      dataroot_LQ: E:\hdrtv\training_set\train_sdr
      dataroot_GT: E:\hdrtv\training_set\train_hdr
      use_shuffle: True
      n_workers: 8
      batch_size: 12
      GT_size: 256
      use_flip: True
      use_rot: True
      condition: image
      phase: train
      scale: 1
      data_type: img
    ]
    val:[
      name: Single_LDR2HDR
      mode: hdrtv
      dataroot_LQ: E:\hdrtv\valid\sdr
      dataroot_GT: E:\hdrtv\valid\hdr
      condition: image
      phase: val
      scale: 1
      data_type: img
    ]
  ]
  network_G:[
    which_model_G: KIB_DM_F_1x1_mask
    in_nc: 3
    out_nc: 3
    nf: 64
    act_type: relu
    scale: 1
  ]
  path:[
    root: D:\sourceCode\openSource\KUNet\./
    strict_load: False
    experiments_root: D:\sourceCode\openSource\KUNet\./experiments\hdrtv_final
    models: D:\sourceCode\openSource\KUNet\./experiments\hdrtv_final\models
    training_state: D:\sourceCode\openSource\KUNet\./experiments\hdrtv_final\training_state
    log: D:\sourceCode\openSource\KUNet\./experiments\hdrtv_final
    val_images: D:\sourceCode\openSource\KUNet\./experiments\hdrtv_final\val_images
  ]
  train:[
    lr_G: 0.0002
    lr_scheme: MultiStepLR
    beta1: 0.9
    beta2: 0.99
    niter: 1000000
    warmup_iter: -1
    lr_steps: [100000, 200000, 300000, 400000, 500000]
    lr_gamma: 0.5
    pixel_criterion: maskl1_l1
    pixel_weight: 0.01
    manual_seed: 10
    val_freq: 5000.0
  ]
  logger:[
    print_freq: 100
    save_checkpoint_freq: 5000.0
  ]
  is_train: True
  dist: False

22-04-26 21:39:25.045 - INFO: Random seed: 10
22-04-26 21:39:25.119 - INFO: Dataset [LQGT_dataset - Single_LDR2HDR] is created.
22-04-26 21:39:25.120 - INFO: Number of train images: 1,235, iters: 103
22-04-26 21:39:25.120 - INFO: Total epochs needed: 9709 for iters 1,000,000
22-04-26 21:39:25.120 - INFO: Dataset [LQGT_dataset - Single_LDR2HDR] is created.
22-04-26 21:39:25.121 - INFO: Number of val images in [Single_LDR2HDR]: 3
22-04-26 21:39:26.578 - INFO: Network G structure: DataParallel - HDRUNet, with parameters: 2,160,911
22-04-26 21:39:26.579 - INFO: HDRUNet(
  (conv_first): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (HR_conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (down_conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
  (down_conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
  (recon_trunk1): mulRDBx4(
    (rdb): RDB(
      (layer): Sequential(
        (0): BasicBLock(
          (conv): conv2d(
            (acti): ReLU()
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        (1): BasicBLock(
          (conv): conv2d(
            (acti): ReLU()
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
      )
      (conv1x1): conv2d(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (conv1x1): conv2d(
      (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (recon_trunk2): mulRDBx6(
    (rdb): RDB(
      (layer): Sequential(
        (0): BasicBLock(
          (conv): conv2d(
            (acti): ReLU()
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        (1): BasicBLock(
          (conv): conv2d(
            (acti): ReLU()
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
      )
      (conv1x1): conv2d(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (conv1x1): conv2d(
      (conv): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (recon_trunk3): mulRDBx4(
    (rdb): RDB(
      (layer): Sequential(
        (0): BasicBLock(
          (conv): conv2d(
            (acti): ReLU()
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        (1): BasicBLock(
          (conv): conv2d(
            (acti): ReLU()
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
      )
      (conv1x1): conv2d(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (conv1x1): conv2d(
      (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (up_conv1): Sequential(
    (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): PixelShuffle(upscale_factor=2)
  )
  (up_conv2): Sequential(
    (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): PixelShuffle(upscale_factor=2)
  )
  (HR_conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv_last): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (act): ReLU(inplace=True)
  (up_KIB1): Sequential(
    (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): PixelShuffle(upscale_factor=2)
  )
  (up_KIB2): Sequential(
    (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): PixelShuffle(upscale_factor=2)
    (2): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): PixelShuffle(upscale_factor=2)
  )
  (up_KIB3): Sequential(
    (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): PixelShuffle(upscale_factor=2)
    (2): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): PixelShuffle(upscale_factor=2)
  )
  (up_KIB4): Sequential(
    (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): PixelShuffle(upscale_factor=2)
  )
  (restoration1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (restoration2): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (restoration3): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (restoration4): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (alpha): Sequential(
    (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (belta): Sequential(
    (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (gammma1): DM_F_1X1(
    (tmo): Sequential(
      (0): conv2d(
        (acti): ReLU()
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): conv2d(
        (acti): ReLU()
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (denosing): res_block(
      (conv): conv2d(
        (acti): ReLU()
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (cos_sim): CosineSimilarity()
    (refin): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
  )
  (gammma2): DM_F_1X1(
    (tmo): Sequential(
      (0): conv2d(
        (acti): ReLU()
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): conv2d(
        (acti): ReLU()
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (denosing): res_block(
      (conv): conv2d(
        (acti): ReLU()
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (cos_sim): CosineSimilarity()
    (refin): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
  )
  (gammma3): DM_F_1X1(
    (tmo): Sequential(
      (0): conv2d(
        (acti): ReLU()
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): conv2d(
        (acti): ReLU()
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (denosing): res_block(
      (conv): conv2d(
        (acti): ReLU()
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (cos_sim): CosineSimilarity()
    (refin): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
  )
)
22-04-26 21:39:26.581 - INFO: Model [GenerationModel] is created.
22-04-26 21:39:26.581 - INFO: Start training from epoch: 0, iter: 0
22-04-26 21:41:10.787 - INFO: <epoch:  0, iter:     100, lr:2.000e-04, , time:90.869> l_pix: 2.6821e-02 
22-04-26 21:42:56.531 - INFO: <epoch:  1, iter:     200, lr:2.000e-04, , time:105.744> l_pix: 3.2259e-02 
